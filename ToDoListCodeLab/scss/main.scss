:root {
    --clr-primary: rgb(54, 112, 199);
    --clr-light: #f4f4f4;
    --clr-dark: #333;
    --clr-warning: rgb(99, 36, 36); 
}

*,
*::before,
*::after {
    font-family: inherit;
    box-sizing: border-box;
}

body {
    margin: 0;
    font-family: "Work Sans", sans-serif;
    font-weight: 300;
    font-size: 1.5rem;
    background-color: var(--clr-primary);
    color: var(--clr-light);

    display: grid;//write less code with grid in general
    grid:
    //grid-template-columns: 
        "header header header header" auto//first row in grid four columns used for header
         "...... lists active ......" auto /
        1fr minmax(100px, 300px) minmax(250px, 500px) 1fr; //1fr use available space, not completely responsive
}

//advised to use Firefox as developing browswer if using grid
.title {
    grid-area: header;
    text-align: center;
    font-size: calc(7vw + 2rem);//do not use vw in body
    font-weight: 900;
    color: rgba(0,0,0,0.1);//super low opacity
    letter-spacing: 2x;
    margin: -0.3em 0 0.5em;
}

.all-tasks {
    grid-area: lists;
}

.task-list {
    font-size: 1.2rem;
    line-height: 1.7;
    list-style: circle; //change style of bullet list
    padding-left: 1.1em;//instead of giant indent
}

.list-name {
    cursor: pointer;
}

.list-name:hover {
    opacity: 0.7;
}

form{
    display: flex;
}

.btn {
    cursor: pointer;
    background: 0;
    border: 0;
    padding: 0;
    color: inherit;
}

.btn.create {
    font-size: 1.5rem;
    font-weight: 900;
    margin-right: 0.25em;
    transition: opacity 250ms ease-in;
}

.btn.create:hover {
    opacity: 0.7;
}

.btn-delete {
    opacity: 0.7;
    font-size: 1rem;
    transition: color 200ms;
}

.btn.delete:hover {
    color: var(--clr-warning);
}

.new {
    background: transparent;
    border: 0;
    color: inherit;//inherit white color
    border-bottom: 1px solid currentColor;//color of text
    font-size: inherit;//using everywhere else
    outline: none; //bad practice want visual indicator when something is clicking
    padding: 0.25em;

    transition: border-bottom 150ms ease-in;
    order: 2;
}

.new::placeholder {
    opacity: 0.4;
}

.new:focus {
    border-bottom-width: 3px; //visual indicator in there
}

.next-focus::placeholder {
    opacity: 0.15;
}


.new.list {
    font-size: 1.1rem;
}

.new.task {
    margin-bottom: 0;
}

.active-list {
    font-weight: 700;
}

.todo-list {
    --spacer: 2rem;//locally scoped custom properties
    
    grid-area: active;
    background: var(--clr-light);
    color: var(--clr-dark);

}

.todo-header {
    padding: var(--spacer);
    background: #e4e4e4;
    display: flex;
    align-items: center;

    justify-content: space-between; //to spread out
}

.list-title {
    margin: 0 1 em 0 0;//to make sure not touching
}

.task-count {
    margin: 0;
    font-size: 1rem;
}

.todo-body {
    padding: var(--spacer);
    position: relative;
}

.new-task-creator .create{
    color: var(--clr-primary);
}

[type="checkbox"] {
    opacity: 0;
    position: absolute;
}

.task label {
    display: inline-flex; 
    align-items: center;
    position: relative;
}

.task {
    position: relative;
    margin-bottom: 1.25em;
}

.task::after {
    content: "";
    position: absolute;
    right: 0;
    left: 0;
    bottom: -0.5em;
    height: 1px;
    background: currentColor;
    opacity: 0.1;
}

.custom-checkbox{
    --size: 0.75em;//to change size in only one place
    display: inline-block;
    width: var(--size);
    height: var(--size);
    margin-right: var(--size);
    cursor: pointer;
    border: 2px solid currentColor;
    border-radius: 50%;
    transform: scale(1);
    transition: transform 300ms ease-in-out;
}

.task:hover .custom-checkbox,     
[type="checkbox"]:focus + label .custom-checkbox {//tab and hover do same thing
    transform: scale(1.2);
    color: var(--clr-primary);
}

[type="checkbox"]:checked + label .custom-checkbox {
    background: var(--clr-primary);
    border-color:  var(--clr-primary);
    box-shadow: inset 0 0 0px 2px white;//shadow on inset
}

//for cross out animation
[type="checkbox"]:checked + label {
    opacity: 0.5;
}

.task label::after {
    content: "";
    position: absolute;
    left: 0;
    right: 0;
    left: 1.5em; 
    top: 50%;
    height: 3px; 
    background: currentColor;
    transform: scaleX(0);
    transform-origin: right;
    transition: transform 150 ms ease-in-out;
}

[type="checkbox"]:checked + label::after {
    transform: scaleX(1);
    transform-origin: left;
}

.delete-stuff {
    display: flex;
    justify-content: space-evenly;//balance
    position: absolute;
    width: 100%;
    left: 0;
    bottom: -35px;
    color: var(--clr-light);
}
